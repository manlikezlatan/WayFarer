{"version":3,"sources":["../../api/middleware/auth.js"],"names":["dotenv","config","auth","verifyToken","req","res","next","token","headers","status","json","error","jwt","verify","process","env","SECRET","result","user","user_id","userId","email","first_name","last_name","is_admin"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEAA,mBAAOC,MAAP;;AAEA,IAAMC,IAAI,GAAG;AACX;;;;;;;AAOMC,EAAAA,WARK;AAAA;AAAA;AAAA,kDAQOC,GARP,EAQYC,GARZ,EAQiBC,IARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AASDC,cAAAA,KATC,GASSH,GAAG,CAACI,OATb,CASDD,KATC;;AAAA,kBAUJA,KAVI;AAAA;AAAA;AAAA;;AAAA,+CAWAF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,gBAAAA,MAAM,EAAE,OADkB;AAE1BE,gBAAAA,KAAK,EAAE;AAFmB,eAArB,CAXA;;AAAA;AAAA;AAAA;AAAA,qBAiBcC,yBAAIC,MAAJ,CAAWN,KAAX,EAAkBO,OAAO,CAACC,GAAR,CAAYC,MAA9B,CAjBd;;AAAA;AAiBDC,cAAAA,MAjBC;AAkBPb,cAAAA,GAAG,CAACc,IAAJ,GAAW;AACTC,gBAAAA,OAAO,EAAEF,MAAM,CAACG,MADP;AAETC,gBAAAA,KAAK,EAAEJ,MAAM,CAACI,KAFL;AAGTC,gBAAAA,UAAU,EAAEL,MAAM,CAACK,UAHV;AAITC,gBAAAA,SAAS,EAAEN,MAAM,CAACM,SAJT;AAKTC,gBAAAA,QAAQ,EAAEP,MAAM,CAACO;AALR,eAAX;AAOAlB,cAAAA,IAAI;AAzBG;AAAA;;AAAA;AAAA;AAAA;AAAA,+CA2BAD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,gBAAAA,MAAM,EAAE,OADkB;AAE1BE,gBAAAA,KAAK,EAAE;AAFmB,eAArB,CA3BA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAb;eAmCeT,I","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport dotenv from 'dotenv';\r\nimport db from '../models/query';\r\n\r\ndotenv.config();\r\n\r\nconst auth = {\r\n  /**\r\n   * Verification of to Token\r\n   * @param {object} req\r\n   * @param {object} res\r\n   * @param {object} next\r\n   * @returns {object|void} Token object\r\n   */\r\n  async verifyToken(req, res, next) {\r\n    const { token } = req.headers;\r\n    if (!token) {\r\n      return res.status(400).json({\r\n        status: 'error',\r\n        error: 'Kindly provide token'\r\n      });\r\n    }\r\n    try {\r\n      const result = await jwt.verify(token, process.env.SECRET);\r\n      req.user = {\r\n        user_id: result.userId,\r\n        email: result.email,\r\n        first_name: result.first_name,\r\n        last_name: result.last_name,\r\n        is_admin: result.is_admin,\r\n      };\r\n      next();\r\n    } catch (error) {\r\n      return res.status(400).json({\r\n        status: 'error',\r\n        error: 'Authentication error!'\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport default auth;\r\n"],"file":"auth.js"}
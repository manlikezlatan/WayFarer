{"version":3,"sources":["../../api/test/busTest.js"],"names":["chai","use","chaiHttp","should","number_plate","manufacturer","model","year","capacity","token","jwt","sign","email","user_id","is_admin","first_name","last_name","process","env","SECRET","expiresIn","beforeEach","pool","query","err","describe","it","done","request","app","post","end","res","have","status","body","be","a","property","eql","bus","set","send","get","data","undefined","notfound"],"mappings":"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","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport jwt from 'jsonwebtoken';\r\nimport app from '../app';\r\nimport pool from '../models/dbPool';\r\n\r\nchai.use(chaiHttp);\r\nconst should = chai.should();\r\nshould;\r\n\r\nconst number_plate = 'CODACK';\r\nconst manufacturer = 'Bugatti';\r\nconst model = 'Chiron';\r\nconst year = 2020;\r\nconst capacity = 20;\r\nconst token = jwt.sign(\r\n  {\r\n    email: 'zlatan@gmail.com',\r\n    user_id: 1,\r\n    is_admin: true,\r\n    first_name: 'Ibrahim',\r\n    last_name: 'Babatunde',\r\n  },\r\n  process.env.SECRET,\r\n  {\r\n    expiresIn: '2h',\r\n  },\r\n);\r\n\r\nbeforeEach(() => {\r\n  pool.query('TRUNCATE TABLE buses CASCADE',\r\n    err => err);\r\n});\r\n\r\n// ADD buses Testing\r\ndescribe('/POST add a bus', () => {\r\n  it('it should not add a bus if authorization token is not provided', (done) => {\r\n    chai.request(app)\r\n      .post('/api/v1/buses')\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('status').eql('error');\r\n        res.body.should.have.property('error').eql('Kindly provide token');\r\n        done(err);\r\n      });\r\n  });\r\n\r\n  it('it should not add a bus without any bus details', (done) => {\r\n    const bus = {\r\n      number_plate: '',\r\n      manufacturer: '',\r\n      model: '',\r\n      year: '',\r\n      capacity: '',\r\n    };\r\n    chai.request(app)\r\n      .post('/api/v1/buses')\r\n      .set('token', token)\r\n      .send(bus)\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('status').eql('error');\r\n        res.body.should.have.property('error').eql('Kindly fill the required fields');\r\n        done(err);\r\n      });\r\n  });\r\n\r\n  it('it should not add a bus without number plate only', (done) => {\r\n    const bus = {\r\n      model,\r\n      year,\r\n      manufacturer,\r\n      capacity\r\n    };\r\n    chai.request(app)\r\n      .post('/api/v1/buses')\r\n      .set('token', token)\r\n      .send(bus)\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('status').eql('error');\r\n        res.body.should.have.property('error').eql('Kindly fill the required fields');\r\n        done(err);\r\n      });\r\n  });\r\n\r\n  it('it should not add a bus without a manufacturer', (done) => {\r\n    const bus = {\r\n      number_plate,\r\n      manufacturer: '',\r\n      model,\r\n      year,\r\n      capacity,\r\n    };\r\n    chai.request(app)\r\n      .post('/api/v1/buses')\r\n      .set('token', token)\r\n      .send(bus)\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('status').eql('error');\r\n        res.body.should.have.property('error').eql('Kindly fill the required fields');\r\n        done(err);\r\n      });\r\n  });\r\n\r\n  it('it should add a bus', (done) => {\r\n    const bus = {\r\n      number_plate,\r\n      manufacturer,\r\n      model,\r\n      year,\r\n      capacity,\r\n    };\r\n    chai.request(app)\r\n      .post('/api/v1/buses')\r\n      .set('token', token)\r\n      .send(bus)\r\n      .end((err, res) => {\r\n        res.should.have.status(201);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('status').eql('success');\r\n        res.body.should.have.property('data');\r\n        done(err);\r\n      });\r\n  });\r\n});\r\n\r\n// Get all buses\r\ndescribe('/GET/ all buses', () => {\r\n  it('it should return a response of no buses if there are no buses yet', (done) => {\r\n    chai.request(app)\r\n      .get('/api/v1/buses')\r\n      .set('token', token)\r\n      .end((err, res) => {\r\n        if (res.body.data === undefined) {\r\n          res.should.have.status(status.notfound);\r\n          res.body.should.be.a('object');\r\n          res.body.should.have.property('status').eql('error');\r\n          res.body.should.have.property('error').eql('There are no buses');\r\n        }\r\n        done(err);\r\n      });\r\n  });\r\n  it('it should make an admin GET all buses', (done) => {\r\n    chai.request(app)\r\n      .get('/api/v1/buses')\r\n      .set('token', token)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('status').eql('success');\r\n        res.body.should.have.property('data');\r\n        done(err);\r\n      });\r\n  });\r\n});\r\n"],"file":"busTest.js"}